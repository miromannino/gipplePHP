Model
======================================


Principi fondamentali
--------------------------------------

Il Model è quella parte che è in grado di modificare i dati ed in qualche modo dovrebbe fornire ... cercare su internet

Ogni Model è implementato come una classe e il file che la contiene come al solito ha lo stesso nome con le abitudinarie convenzioni per le sotto-cartelle.

Utilizzo
--------------------------------------

Per caricare un Model si utilizza la funzione `System::loadModel($name)`. Il nome è un percorso che ha come root `'/application/model'`. Se volessimo ad esempio caricare il modello `MyObject` che si trova in `'/application/model/MyObject.php'` bisognerà fare `System::loadModel('MyObject')`. Nel caso anche in questo caso si volessero distribuire i file in sotto-cartelle per caricare un Model che si trova ad esempio nel file `'/application/model/SubFolder/MyObject.php'` si scriverà `System::loadModel('SubFolder/MyObject')`. Nota che i nomi delle classi sono organizzate come al solito e quindi il file nell'esempio precedente avrà come nome della classe `'SubFolder_MyObject'`.


`System::loadDatabase($dbname)`
-------------------------------------

Questa funzione restituisce un oggetto PDO _(vedi manuale di PHP)_ istanziata su un database predefinito. I database che si possono usare si configurano settando un file di configurazione in `'/application/config/system/database.php'`. Ecco un esempio di un file di configurazione di questo tipo:

	<?php
		return array(
			'db1' => array(
				'dsn' => 'mysql:host=localhost;dbname=prove',
				'usr' => 'prova',
				'psw' => 'prova',
				/* 'opt' => array(...) */
			)
		);
	?>


In genere la connessione al database è una cosa che solo il Model dovrebbe poter fare ma in generale per le semplici operazioni non c'è bisogno di fare un Model, si è deciso quindi di non rendere tale funzione di aiuto una funzione esclusiva della sola classe Model, la classe System infatti ricordiamo che ha metodi statici richiamabili ovunque.

Ecco un esempio di un Model che usa tale funzione:

	class Pippo {
		
		function __costruct(){
			$this->db1 = System::loadDatabase('db1');
		}

		function createTable(){
			$this->db1->exec('create table Example ( id integer primary key )');
		}
		
		public function insertObject($obj){
			$this->db1->exec('insert into Object(obj) values(\'' . $obj . '\')');
		}
	}


